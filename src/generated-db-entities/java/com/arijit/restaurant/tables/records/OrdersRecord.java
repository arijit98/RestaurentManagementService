/*
 * This file is generated by jOOQ.
 */
package com.arijit.restaurant.tables.records;


import com.arijit.restaurant.tables.Orders;

import java.beans.ConstructorProperties;
import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends TableRecordImpl<OrdersRecord> implements Record7<UUID, Integer, String, String, Double, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.orders.id</code>.
     */
    public OrdersRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.orders.table_id</code>.
     */
    public OrdersRecord setTableId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.table_id</code>.
     */
    public Integer getTableId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.orders.customer_name</code>.
     */
    public OrdersRecord setCustomerName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.customer_name</code>.
     */
    public String getCustomerName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.orders.status</code>.
     */
    public OrdersRecord setStatus(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.status</code>.
     */
    public String getStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.orders.total_price</code>.
     */
    public OrdersRecord setTotalPrice(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.total_price</code>.
     */
    public Double getTotalPrice() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>public.orders.created_at</code>.
     */
    public OrdersRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.orders.updated_at</code>.
     */
    public OrdersRecord setUpdatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, Integer, String, String, Double, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, Integer, String, String, Double, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Orders.ORDERS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Orders.ORDERS.TABLE_ID;
    }

    @Override
    public Field<String> field3() {
        return Orders.ORDERS.CUSTOMER_NAME;
    }

    @Override
    public Field<String> field4() {
        return Orders.ORDERS.STATUS;
    }

    @Override
    public Field<Double> field5() {
        return Orders.ORDERS.TOTAL_PRICE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Orders.ORDERS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Orders.ORDERS.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getTableId();
    }

    @Override
    public String component3() {
        return getCustomerName();
    }

    @Override
    public String component4() {
        return getStatus();
    }

    @Override
    public Double component5() {
        return getTotalPrice();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getTableId();
    }

    @Override
    public String value3() {
        return getCustomerName();
    }

    @Override
    public String value4() {
        return getStatus();
    }

    @Override
    public Double value5() {
        return getTotalPrice();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public OrdersRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public OrdersRecord value2(Integer value) {
        setTableId(value);
        return this;
    }

    @Override
    public OrdersRecord value3(String value) {
        setCustomerName(value);
        return this;
    }

    @Override
    public OrdersRecord value4(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public OrdersRecord value5(Double value) {
        setTotalPrice(value);
        return this;
    }

    @Override
    public OrdersRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public OrdersRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public OrdersRecord values(UUID value1, Integer value2, String value3, String value4, Double value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    @ConstructorProperties({ "id", "tableId", "customerName", "status", "totalPrice", "createdAt", "updatedAt" })
    public OrdersRecord(UUID id, Integer tableId, String customerName, String status, Double totalPrice, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Orders.ORDERS);

        setId(id);
        setTableId(tableId);
        setCustomerName(customerName);
        setStatus(status);
        setTotalPrice(totalPrice);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(com.arijit.restaurant.tables.pojos.Orders value) {
        super(Orders.ORDERS);

        if (value != null) {
            setId(value.getId());
            setTableId(value.getTableId());
            setCustomerName(value.getCustomerName());
            setStatus(value.getStatus());
            setTotalPrice(value.getTotalPrice());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
